[%@ template language="CSharp" %]
[%@ namespace name="CodeFluent.Producers.CodeDom" %]
[%@ namespace name="CodeFluent.Model.Code" %]
[%@ namespace name="CodeFluent.Model.UI" %]
[%@ namespace name="CodeFluent.Model" %]
[%@ namespace name="CodeFluent.Runtime.UI" %]
[%@ namespace name="CodeFluent.Runtime.Utilities" %]
[%@ namespace name="System.IO" %]
[%@ namespace name="System" %]
[%@ namespace name="System.Collections.ObjectModel"%]
[%@ namespace name="System.Collections.Generic"%]
[%@ namespace name="CodeFluent.Producers.SmartClient" %]
    
  
[%@ member 
    
 
    private static void GetValidNamespaceList(TextWriter writer, Namespace[] RootNamespaces)
        {                                         
                                                      
            foreach (Namespace ns in RootNamespaces)
            {
                bool NodeCreated = false;
                if (HasValidEntity(ns))
                {
                     writer.WriteLine( "<TreeViewItem  Header=\""+ConvertUtilities.Decamelize(ns.Name)+"\" Style=\"{DynamicResource TreeViewItemStyle}\">");
                     writer.WriteLine("<TreeViewItem.Items>");
                     NodeCreated = true;
                }
                foreach (BaseType baseType in ns.Types)
                {
                   
                    if (baseType.UIEnabled && IsValidEntityForNamespaceTree(baseType as Entity)) {           
                        writer.WriteLine(" <TreeViewItem  Header=\"" + ConvertUtilities.Decamelize(baseType.Name) +"\" Style=\"{DynamicResource TreeViewItemStyle}\" Selected=\"" +baseType.Name+"ItemSelected\"/>");                                   
                   }
                }
                GetValidNamespaceList(writer, ns.ChildNamespaces);
                if (NodeCreated)
                {
                    writer.WriteLine("</TreeViewItem.Items> ");
                    writer.WriteLine("</TreeViewItem>");
                }
            } 
                
        }
        
    private static bool IsValidEntityForNamespaceTree(Entity entity)
	{
		if ((entity == null) || (entity.IsLightWeight) || !(entity.IsPersistent))
			return false;
		return true;
	}

	private static bool HasValidEntity(Namespace ns)
	{
		foreach(BaseType baseType in ns.Types)
		{
			Entity entity = baseType as Entity;
			if (IsValidEntityForNamespaceTree(entity)) return true;
		}
		return false;
	}
 %]    
    
    
<UserControl x:Class="[%=Producer.Project.DefaultNamespace %].SmartClient.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:local="clr-namespace:[%=Producer.Project.DefaultNamespace %].SmartClient">
    <Control.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Control.Resources>
    <Grid>
        <DockPanel x:Name="uiMainDockPanel">
            <!--Header-->
            <Border x:Name="uiHeaderBorder" DockPanel.Dock="Top" Style="{DynamicResource HeaderBorderStyle}" BorderBrush="{DynamicResource BorderBrush}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="[%=ConvertUtilities.Decamelize(Producer.Project.DefaultNamespace.Replace("."," "))%]" Grid.Column="0" Style="{DynamicResource HeaderTextStyle}"/>
                    <Image Source="Resources\SmartClientLogo.png" Grid.Column="1" HorizontalAlignment="Right"/>
                </Grid>
            </Border>

            <!--Menu-->
            <!--<Border x:Name="uiMenuBorder" Style="{DynamicResource MenuBorderStyle}" DockPanel.Dock="Top">
                <Menu x:Name="uiMenu" Style="{DynamicResource MenuStyle}">
                    <MenuItem Header="Root 1" Style="{DynamicResource MenuItemStyle}">
                        <MenuItem Header="Sub menu item 1"></MenuItem>
                        <MenuItem Header="Sub menu item 2"></MenuItem>
                        <MenuItem Header="Sub menu item 3"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="Root 2" Style="{DynamicResource MenuItemStyle}">
                        <MenuItem Header="Sub menu item 1"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="Root 3" Style="{DynamicResource MenuItemStyle}">
                        <MenuItem Header="Sub menu item 1"></MenuItem>
                        <MenuItem Header="Sub menu item 2"></MenuItem>
                    </MenuItem>
                </Menu>
            </Border>-->
            
            <!--Content-->
            <Grid Style="{DynamicResource MainGridStyle}">
                <Border Background="{DynamicResource DiagramGradientBrush}" Style="{DynamicResource TreeViewBorderStyle}" >
                    <TreeView x:Name="entityTreeview" Style="{DynamicResource TreeViewStyle}">
                        <TreeView.Items>
                            [% GetValidNamespaceList(Writer, Producer.Project.RootNamespaces);
                                
                             %]
                        </TreeView.Items>    
                    </TreeView>
                </Border>


                    <Border Background="{DynamicResource DiagramGradientBrush}" Style="{DynamicResource ContentBorderStyle}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DockPanel Name="viewPanel" Grid.Row="1"></DockPanel>


                        <Grid Grid.Row="0" HorizontalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="90"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="90"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="90"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="10"/>
                            </Grid.RowDefinitions>
                            <Button Grid.Column="0" Grid.Row="0" Name="ButtonAdd" Click="ButtonAdd_Clicked">
                                <Button.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image Grid.Column="0"  Source="Resources/add.png"/>
                                        <TextBlock Grid.Column="1"  Text="Create" VerticalAlignment="Center"/>
                                    </Grid>
                                </Button.Content>
                            </Button>
                            <Button Grid.Column="2" Grid.Row="0" Name="ButtonDelete"  Click="ButtonDelete_Clicked">
                                <Button.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image Grid.Column="0"  Source="Resources/cancel.png"/>
                                        <TextBlock Grid.Column="1"  Text="Delete" VerticalAlignment="Center"/>
                                    </Grid>
                                </Button.Content>
                            </Button>
                            <Button Grid.Column="4" Grid.Row="0" Name="ButtonRefresh"  Click="ButtonRefresh_Clicked">
                                <Button.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image Grid.Column="0"  Source="Resources/arrow_refresh.png"/>
                                        <TextBlock Grid.Column="1"  Text="Refresh" VerticalAlignment="Center"/>
                                    </Grid>
                                </Button.Content>
                            </Button>
                        </Grid>

                    </Grid>
                </Border>
            </Grid>
        </DockPanel>
    </Grid>
</UserControl>
