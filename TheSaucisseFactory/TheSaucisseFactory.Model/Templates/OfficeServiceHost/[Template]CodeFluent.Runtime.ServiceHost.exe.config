<?xml version="1.0" ?>
<?code @ namespace name="System" ?>
<?code @ namespace name="CodeFluent.Model" ?>
<!-- [%=Producer.GetSignature()%] -->
<configuration>
	<configSections>
		<section name="codeFluent.runtime.serviceHost" type="CodeFluent.Runtime.ServiceHost.Configuration.ServiceSection, CodeFluent.Runtime.ServiceHost" />
		<section name="[%=Producer.Project.DefaultNamespace%]" type="CodeFluent.Runtime.CodeFluentConfigurationSectionHandler, CodeFluent.Runtime" />
	</configSections>

	<[%=Producer.Project.DefaultNamespace%] connectionString="[%=Producer.Project.DefaultConnectionString%]" />

    <codeFluent.runtime.serviceHost startsHostInfo="false" stopServicesAsync="true" stopServicesMaxWaitTime="-1">
		<services>
			<service baseAddress="[%=Producer.ServiceHostBaseUrl%]" name="[%=Producer.Project.DefaultNamespace%].OfficeHost" typeName="[%=Producer.ServiceHostClrFullTypeName%], [%=System.IO.Path.GetFileNameWithoutExtension(Producer.OutputName)%]" />
      <service baseAddress="[%=Producer.BitsServerBaseUrl%]" name="[%=Producer.Project.DefaultNamespace%].BitsServer" typeName="[%=Producer.BitsServerClrFullTypeName%], [%=System.IO.Path.GetFileNameWithoutExtension(Producer.ModelProducer.OutputName)%]" />
    </services>
	</codeFluent.runtime.serviceHost>

	<system.serviceModel>
		<services>
      <service name="[%=Producer.ServiceHostClrFullTypeName%]" behaviorConfiguration="MyServiceTypeBehaviors">
        <endpoint address="_vti_bin/Webs.asmx" binding="basicHttpBinding" contract="CodeFluent.Runtime.Office.ServiceHost.IOfficeContract" bindingConfiguration="MyBasicHttpBinding" />
        <endpoint address="[%=Producer.Project.DefaultNamespace%]/en-US/_vti_bin/lists.asmx" binding="basicHttpBinding" contract="CodeFluent.Runtime.Office.ServiceHost.IOfficeContract" bindingConfiguration="MyBasicHttpBinding" />
        <endpoint address="[%=Producer.Project.DefaultNamespace%]/en-US/" binding="webHttpBinding" contract="CodeFluent.Runtime.Office.ServiceHost.IOfficeContract" behaviorConfiguration="MyWebHttpBehavior" bindingConfiguration="MyWebHttpBinding" />
      </service>
    </services>

		<behaviors>
			<serviceBehaviors>
				<behavior name="MyServiceTypeBehaviors" >
          <serviceMetadata httpGetEnabled="True"/>
        </behavior>
			</serviceBehaviors>
      <endpointBehaviors>
        <!--
					NOTE: this setting requires the .NET Framework 3.5.
					-->
        <behavior name="MyWebHttpBehavior">
          <webHttp />
        </behavior>
      </endpointBehaviors>
    </behaviors>

		<bindings>
      <basicHttpBinding>
        <!--
					NOTE: maxReceivedMessageSize is required for blob upload using Microsoft Access (Attachments column)
					-->
        <binding name="MyBasicHttpBinding" maxReceivedMessageSize="2147483647">
        </binding>
      </basicHttpBinding>
      <!--
					NOTE: this setting requires the .NET Framework 3.5.
					-->
      <webHttpBinding>
        <binding name="MyWebHttpBinding">
        </binding>
      </webHttpBinding>
    </bindings>
		<diagnostics performanceCounters="Off">
			<!--
			NOTE: these diagnostics settings are for debugging only, as they are *very* verbose.
			Make sure you do not go into production with this.
			-->
			<messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtTransportLevel="true" logMessagesAtServiceLevel="true" />
		</diagnostics>
	</system.serviceModel>

	<!--
	NOTE: these diagnostics settings are for debugging only, as they are *very* verbose.
	Make sure you do not go into production with this.
  
  NOTE: do *not* add propagateActivity="true" to the System.ServiceModel diagnostics source as it adds an header to
  the Xml message, and Office clients do not understand it any more.
	-->
	<system.diagnostics>
		<sources>
			<source name="System.ServiceModel" switchValue="Information, ActivityTracing">
				<listeners>
					<add name="XTL" />
					<add name="CFTL" />
				</listeners>
			</source>
			<source name="System.ServiceModel.MessageLogging" switchValue="Information, ActivityTracing">
				<listeners>
					<add name="XTL" />
				</listeners>
			</source>
		</sources>
		<sharedListeners>
			<add initializeData="[%=Producer.Project.DefaultNamespace%].svclog" type="System.Diagnostics.XmlWriterTraceListener" name="XTL" />
			<!--
			NOTE: this CodeFluent specific trace listener allows you to see WCF Services exceptions directly displayed in the CodeFluent.Runtime.ServiceHost.exe console
			To run services in console mode, just launch CodeFluent.Runtime.ServiceHost.exe with the Explorer or a .bat or .cmd file.
			-->
			<add type="CodeFluent.Runtime.ServiceHost.Utilities.WcfTraceListener, CodeFluent.Runtime.ServiceHost" name="CFTL" />
		</sharedListeners>
		<trace autoflush="true" />
	</system.diagnostics>
</configuration>
