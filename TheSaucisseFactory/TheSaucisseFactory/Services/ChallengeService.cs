//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheSaucisseFactory.Services
{
    using CodeFluent.Runtime;
    using CodeFluent.Runtime.Utilities;
    
    
    // CodeFluent Entities generated .
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.01234.05678")]
    public partial class ChallengeService : TheSaucisseFactory.Services.IChallengeService
    {
        
        public virtual string Validate(TheSaucisseFactory.Challenge challenge, string culture)
        {
            System.Globalization.CultureInfo cultureInfo = ConvertUtilities.ToCultureInfo(culture);
            TheSaucisseFactory.Challenge challenge1 = challenge;
            if ((challenge1 == null))
            {
                return default(string);
            }
            return challenge1.Validate(cultureInfo);
        }
        
        public virtual bool Delete(TheSaucisseFactory.Challenge challenge)
        {
            TheSaucisseFactory.Challenge challenge1 = challenge;
            if ((challenge1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return challenge1.Delete();
        }
        
        public virtual TheSaucisseFactory.Challenge Load(System.Guid id)
        {
            return TheSaucisseFactory.Challenge.Load(id);
        }
        
        public virtual TheSaucisseFactory.Challenge LoadById(System.Guid id)
        {
            return TheSaucisseFactory.Challenge.LoadById(id);
        }
        
        public virtual bool Save(TheSaucisseFactory.Challenge challenge)
        {
            TheSaucisseFactory.Challenge challenge1 = challenge;
            if ((challenge1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return challenge1.Save();
        }
        
        public virtual bool SaveByRef(ref TheSaucisseFactory.Challenge challenge)
        {
            TheSaucisseFactory.Challenge challenge1 = challenge;
            if ((challenge1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            bool ret = challenge1.Save();
            challenge = challenge1;
            return ret;
        }
        
        public virtual TheSaucisseFactory.Challenge LoadByEntityKey(string key)
        {
            return TheSaucisseFactory.Challenge.LoadByEntityKey(key);
        }
        
        public virtual bool DeleteByKey(System.Guid id)
        {
            TheSaucisseFactory.Challenge challenge = TheSaucisseFactory.Challenge.Load(id);
            if ((challenge == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return challenge.Delete();
        }
        
        public virtual void SaveAll(TheSaucisseFactory.ChallengeCollection challengeCollection)
        {
            TheSaucisseFactory.ChallengeCollection challengeCollection1 = challengeCollection;
            challengeCollection1.SaveAll();
        }
        
        public virtual TheSaucisseFactory.ChallengeCollection PageLoadAll(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions)
        {
            return TheSaucisseFactory.ChallengeCollection.PageLoadAll(pageIndex, pageSize, pageOptions);
        }
        
        public virtual TheSaucisseFactory.ChallengeCollection LoadAll()
        {
            return TheSaucisseFactory.ChallengeCollection.LoadAll();
        }
    }
}
