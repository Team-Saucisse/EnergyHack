//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheSaucisseFactory.Services
{
    using CodeFluent.Runtime;
    using CodeFluent.Runtime.Utilities;
    
    
    // CodeFluent Entities generated .
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.01234.05678")]
    public partial class AppartementService : TheSaucisseFactory.Services.IAppartementService
    {
        
        public virtual string Validate(TheSaucisseFactory.Appartement appartement, string culture)
        {
            System.Globalization.CultureInfo cultureInfo = ConvertUtilities.ToCultureInfo(culture);
            TheSaucisseFactory.Appartement appartement1 = appartement;
            if ((appartement1 == null))
            {
                return default(string);
            }
            return appartement1.Validate(cultureInfo);
        }
        
        public virtual bool Delete(TheSaucisseFactory.Appartement appartement)
        {
            TheSaucisseFactory.Appartement appartement1 = appartement;
            if ((appartement1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return appartement1.Delete();
        }
        
        public virtual TheSaucisseFactory.Appartement Load(System.Guid id)
        {
            return TheSaucisseFactory.Appartement.Load(id);
        }
        
        public virtual TheSaucisseFactory.Appartement LoadById(System.Guid id)
        {
            return TheSaucisseFactory.Appartement.LoadById(id);
        }
        
        public virtual bool Save(TheSaucisseFactory.Appartement appartement)
        {
            TheSaucisseFactory.Appartement appartement1 = appartement;
            if ((appartement1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return appartement1.Save();
        }
        
        public virtual bool SaveByRef(ref TheSaucisseFactory.Appartement appartement)
        {
            TheSaucisseFactory.Appartement appartement1 = appartement;
            if ((appartement1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            bool ret = appartement1.Save();
            appartement = appartement1;
            return ret;
        }
        
        public virtual TheSaucisseFactory.Appartement LoadByEntityKey(string key)
        {
            return TheSaucisseFactory.Appartement.LoadByEntityKey(key);
        }
        
        public virtual bool DeleteByKey(System.Guid id)
        {
            TheSaucisseFactory.Appartement appartement = TheSaucisseFactory.Appartement.Load(id);
            if ((appartement == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return appartement.Delete();
        }
        
        public virtual void SaveAll(TheSaucisseFactory.AppartementCollection appartementCollection)
        {
            TheSaucisseFactory.AppartementCollection appartementCollection1 = appartementCollection;
            appartementCollection1.SaveAll();
        }
        
        public virtual TheSaucisseFactory.AppartementCollection PageLoadAll(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions)
        {
            return TheSaucisseFactory.AppartementCollection.PageLoadAll(pageIndex, pageSize, pageOptions);
        }
        
        public virtual TheSaucisseFactory.AppartementCollection LoadAll()
        {
            return TheSaucisseFactory.AppartementCollection.LoadAll();
        }
        
        public virtual TheSaucisseFactory.AppartementCollection PageLoadByBatiment(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, string batimentEntityKey)
        {
            if ((batimentEntityKey == null))
            {
                throw new System.ArgumentNullException("batimentEntityKey");
            }
            TheSaucisseFactory.Batiment batiment = TheSaucisseFactory.Batiment.LoadByEntityKey(batimentEntityKey);
            return TheSaucisseFactory.AppartementCollection.PageLoadByBatiment(pageIndex, pageSize, pageOptions, batiment);
        }
        
        public virtual TheSaucisseFactory.AppartementCollection LoadByBatiment(string batimentEntityKey)
        {
            if ((batimentEntityKey == null))
            {
                throw new System.ArgumentNullException("batimentEntityKey");
            }
            TheSaucisseFactory.Batiment batiment = TheSaucisseFactory.Batiment.LoadByEntityKey(batimentEntityKey);
            return TheSaucisseFactory.AppartementCollection.LoadByBatiment(batiment);
        }
    }
}
