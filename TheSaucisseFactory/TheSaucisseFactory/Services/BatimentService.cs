//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheSaucisseFactory.Services
{
    using CodeFluent.Runtime;
    using CodeFluent.Runtime.Utilities;
    
    
    // CodeFluent Entities generated .
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.01234.05678")]
    public partial class BatimentService : TheSaucisseFactory.Services.IBatimentService
    {
        
        public virtual string Validate(TheSaucisseFactory.Batiment batiment, string culture)
        {
            System.Globalization.CultureInfo cultureInfo = ConvertUtilities.ToCultureInfo(culture);
            TheSaucisseFactory.Batiment batiment1 = batiment;
            if ((batiment1 == null))
            {
                return default(string);
            }
            return batiment1.Validate(cultureInfo);
        }
        
        public virtual bool Delete(TheSaucisseFactory.Batiment batiment)
        {
            TheSaucisseFactory.Batiment batiment1 = batiment;
            if ((batiment1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return batiment1.Delete();
        }
        
        public virtual TheSaucisseFactory.Batiment Load(System.Guid id)
        {
            return TheSaucisseFactory.Batiment.Load(id);
        }
        
        public virtual TheSaucisseFactory.Batiment LoadById(System.Guid id)
        {
            return TheSaucisseFactory.Batiment.LoadById(id);
        }
        
        public virtual bool Save(TheSaucisseFactory.Batiment batiment)
        {
            TheSaucisseFactory.Batiment batiment1 = batiment;
            if ((batiment1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return batiment1.Save();
        }
        
        public virtual bool SaveByRef(ref TheSaucisseFactory.Batiment batiment)
        {
            TheSaucisseFactory.Batiment batiment1 = batiment;
            if ((batiment1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            bool ret = batiment1.Save();
            batiment = batiment1;
            return ret;
        }
        
        public virtual TheSaucisseFactory.Batiment LoadByEntityKey(string key)
        {
            return TheSaucisseFactory.Batiment.LoadByEntityKey(key);
        }
        
        public virtual bool DeleteByKey(System.Guid id)
        {
            TheSaucisseFactory.Batiment batiment = TheSaucisseFactory.Batiment.Load(id);
            if ((batiment == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return batiment.Delete();
        }
        
        public virtual void SaveAll(TheSaucisseFactory.BatimentCollection batimentCollection)
        {
            TheSaucisseFactory.BatimentCollection batimentCollection1 = batimentCollection;
            batimentCollection1.SaveAll();
        }
        
        public virtual TheSaucisseFactory.BatimentCollection PageLoadAll(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions)
        {
            return TheSaucisseFactory.BatimentCollection.PageLoadAll(pageIndex, pageSize, pageOptions);
        }
        
        public virtual TheSaucisseFactory.BatimentCollection LoadAll()
        {
            return TheSaucisseFactory.BatimentCollection.LoadAll();
        }
        
        public virtual TheSaucisseFactory.BatimentCollection PageLoadByResidence(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, string residenceEntityKey)
        {
            if ((residenceEntityKey == null))
            {
                throw new System.ArgumentNullException("residenceEntityKey");
            }
            TheSaucisseFactory.Residence residence = TheSaucisseFactory.Residence.LoadByEntityKey(residenceEntityKey);
            return TheSaucisseFactory.BatimentCollection.PageLoadByResidence(pageIndex, pageSize, pageOptions, residence);
        }
        
        public virtual TheSaucisseFactory.BatimentCollection LoadByResidence(string residenceEntityKey)
        {
            if ((residenceEntityKey == null))
            {
                throw new System.ArgumentNullException("residenceEntityKey");
            }
            TheSaucisseFactory.Residence residence = TheSaucisseFactory.Residence.LoadByEntityKey(residenceEntityKey);
            return TheSaucisseFactory.BatimentCollection.LoadByResidence(residence);
        }
    }
}
